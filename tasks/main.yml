- include: prereq-RedHat.yml
  when: ansible_os_family == 'RedHat'
  tag: pyenv

- include: prereq-Debian.yml
  when: ansible_os_family == 'Debian'

- name: clone pyenv
  git: repo=git://github.com/yyuu/pyenv.git dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/.pyenv accept_hostkey=yes
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"

- name: create environ dir
  file: path={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/profile.d state=directory mode=0755
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"

- name: add environ scrip
  copy: src=../files/pyenv.sh dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/profile.d/ mode=0755
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"

- name: check bash
  shell: "[ -x $(which bash) ] && echo 'Found' || echo ''"
  register: executable_bash
  changed_when: false 

- name: add bash environ
  include: bash-env.yml
  when: executable_bash.stdout

- name: check zsh
  shell: "[ -x $(which zsh) ] && echo 'Found' || echo ''"
  register: executable_zsh
  changed_when: false 

- name: add zsh environ
  include: zsh-env.yml
  when: executable_zsh.stdout

- name: python install
  shell: "echo y | '{{ ANSIBLE_PYENV_PYENV_USER_HOME }}'/.pyenv/bin/pyenv install {{ ANSIBLE_PYENV_PYTHON_VERSION }}"
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  changed_when: false 
  always_run: yes
  
- name: python global 
  shell: "'{{ ANSIBLE_PYENV_PYENV_USER_HOME }}'/.pyenv/bin/pyenv global {{ ANSIBLE_PYENV_PYTHON_VERSION }}"
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"
  changed_when: false 
  always_run: yes

- name: clone pyenv-virtualenv
  git: repo=git://github.com/yyuu/pyenv-virtualenv.git dest={{ ANSIBLE_PYENV_PYENV_USER_HOME }}/.pyenv/plugins/pyenv-virtualenva accept_hostkey=yes
  sudo_user: "{{ ANSIBLE_PYENV_PYENV_USER }}"

- name: python version check
  shell: "su - {{ ANSIBLE_PYENV_PYENV_USER }} -c 'python -V 2>&1' | grep -F {{ ANSIBLE_PYENV_PYTHON_VERSION }}"
  changed_when: false
